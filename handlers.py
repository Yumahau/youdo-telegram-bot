# handlers.py

from aiogram import types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.dispatcher import Dispatcher
from db import add_task, get_all_executors

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ö–µ–Ω–¥–ª–µ—Ä—ã
def register_handlers(dp: Dispatcher):

    @dp.message_handler(commands=['start'])
    async def start_handler(message: types.Message):
        keyboard = InlineKeyboardMarkup(row_width=2)
        keyboard.add(
            InlineKeyboardButton("üìù –†–∞–∑–º–µ—Å—Ç–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ", callback_data="client"),
            InlineKeyboardButton("üõ† –Ø –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å", callback_data="executor")
        )
        await message.answer("–ü—Ä–∏–≤–µ—Ç! –ö—Ç–æ —Ç—ã?", reply_markup=keyboard)

    @dp.callback_query_handler(lambda c: c.data == "executor")
    async def handle_executor(callback_query: types.CallbackQuery):
        user_id = callback_query.from_user.id
        add_task("executors", user_id)  # —Å–æ—Ö—Ä–∞–Ω—è–µ–º id –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
        await callback_query.message.answer("‚úÖ –í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å!")

    @dp.callback_query_handler(lambda c: c.data == "client")
    async def handle_client(callback_query: types.CallbackQuery):
        await callback_query.message.answer("‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è:")
        dp.register_message_handler(get_task, state=None, content_types=types.ContentTypes.TEXT)

    async def get_task(message: types.Message):
        desc = message.text
        add_task("tasks", desc)  # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–¥–∞–Ω–∏–µ
        await message.answer("‚úÖ –ó–∞–¥–∞–Ω–∏–µ —Ä–∞–∑–º–µ—â–µ–Ω–æ. –°–µ–π—á–∞—Å —É–≤–µ–¥–æ–º–∏–º –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π.")

        # –†–∞—Å—Å—ã–ª–∞–µ–º –∑–∞–¥–∞–Ω–∏–µ –≤—Å–µ–º –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è–º
        executors = get_all_executors()
        username = message.from_user.username or "–∞–Ω–æ–Ω–∏–º"
        for uid in executors:
            btn = InlineKeyboardMarkup().add(
                InlineKeyboardButton("–û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è", callback_data=f"respond_{message.from_user.id}")
            )
            try:
                await message.bot.send_message(
                    uid,
                    f"üì¢ –ù–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ –æ—Ç @{username}:\n\n{desc}",
                    reply_markup=btn
                )
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {uid}: {e}")
